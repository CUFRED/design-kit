// Scale and Spacing Variables
// 1.25 Scale: Major Third (some intervals skip steps)
// ---------

//Power function to allow for skipping parts of the scale
@function pow($number, $exponent) {
  $value: 1;

  @if $exponent > 0 {
    @for $i from 1 through $exponent {
      $value: $value * $number;
    }
  }

  @return $value;
}

$scale: 1.25;

$space: 1rem;
$space-m: $space*$scale; // 1.25rem;
$space-l: $space-m*$scale; // 1.563rem;
$space-xl: $space-l*$scale; // 1.953rem;
$space-xxl: $space-xl*$scale; // 2.441rem;
$space-xxxl: $space-xxl*$scale; // 3.05rem;
$space-s: $space/$scale; // 0.8rem;
$space-xs: $space-s/pow($scale, 2); // 0.512rem;
$space-xxs: $space-xs/pow($scale, 2); // 0.328rem;
$space-xxxs: $space-xxs/pow($scale, 2); // 0.21rem;
$space-micro: $space-xxxs/pow($scale, 2); // 0.134rem;

$sizes: (
  0: 0,
  base: $space,
  micro: $space-micro,
  xxxs: $space-xxxs,
  xxs: $space-xxs,
  xs: $space-xs,
  s: $space-s,
  m: $space-m,
  l: $space-l,
  xl: $space-xl,
  xxl: $space-xxl,
  xxxl: $space-xxxl,
);

/**
 * Utility classes for sizing/spacing
 *
 * This generates margin and padding spacing classes using tshirt sizes.
 * For example, to add large padding top to an element, simply add the .pt-l class to it. Micro margin bottom would be .mb-micro, and so on. 
 */
@each $size, $space in $sizes {
  // All Sides
  .m-#{$size} {
    margin: $space !important;
  }
  .p-#{$size} {
    padding: $space !important;
  }

  // Top
  .mt-#{$size} {
    margin-top: $space !important;
  }
  .pt-#{$size} {
    padding-top: $space !important;
  }

  // Bottom
  .mb-#{$size} {
    margin-bottom: $space !important;
  }
  .pb-#{$size} {
    padding-bottom: $space !important;
  }

  // Left
  .ml-#{$size} {
    margin-left: $space !important;
  }
  .pl-#{$size} {
    padding-left: $space !important;
  }

  // Right
  .mr-#{$size} {
    margin-right: $space !important;
  }
  .pr-#{$size} {
    padding-right: $space !important;
  }
}