/**
 * Utility classes for common display properties
 */
.display-inline-block,
.inline-block {
  display: inline-block !important;
}

// Action Bar
.actionbar {
  @include flex-align(null, middle);
  width: 100%;
  padding: $space-s 0;
  background-color: $white;
  border-bottom: $global-separator;
}

.actionbar-dark {
  color: $white;
  background-color: $black;
  min-height: 80px;
  display: grid;
  grid-template-columns: auto;
  align-items: center;
  @include breakpoint(medium) {
    grid-template-columns: repeat(2, auto);
  }
}

// Logos
.nav-logo {
  width: 120px;
}

// CSS Grid
// To be used on outmost layout element to impose fixed-width
// Can also be used to make any container a grid
.grid-container {
  display: grid;
  max-width: $grid-width;
  margin: auto;
  padding: 0 $space-m;
  .grid-container {
    padding: 0;
  }
  * {
    margin: 0;
  }
}

// Card Grid
.card-grid {
  display: grid;
  grid-template-columns: repeat(1, 1fr);
  grid-gap: $space-s;
  // padding-top: $space-l;
  @include breakpoint(medium) {
    grid-template-columns: repeat(2, 1fr);
  }
  @include breakpoint(large) {
    grid-template-columns: repeat(3, 1fr);
  }
  @include breakpoint(xlarge) {
    grid-template-columns: repeat(4, 1fr);
  }

  .card {
    margin:0;
  }
}

.grid-sidebar-l {
  display: grid;
  padding-top: $space-l;
  grid-gap: $space-s;
  grid-template-columns: 1fr;
  @include breakpoint(medium) {
    // grid-template-columns: 1fr 4fr;
    grid-template-columns: $sidebar-width 1fr;
  }
}
