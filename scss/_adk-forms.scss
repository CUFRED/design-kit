// Text Inputs - get rid of box shadow
textarea, input {
  &:focus {
    border-bottom: $thick-underline-hover;
  }
}
input[type="checkbox"] + label,
input[type="radio"] + label,  {
  color: $black;
}

input[type="text"]:focus {
  background-color: transparent;
}

label {
  font-weight: $global-weight-bold;
}

// Input groups
span.input-group-label {
  background: transparent;
  border-radius: 0 $global-radius $global-radius 0;
}

span.input-group-label + input.input-group-field:last-child {
  border-top-right-radius: $global-radius;
  border-bottom-right-radius: $global-radius;
}

//Utility classes for `.no-resize` on textareas
.no-h-resize {
  resize: vertical;
}
.no-v-resize {
  resize: horizontal;
}

// Set <select> "placeholder" color via .ng-empty
select.ng-empty {
  color: $input-placeholder-color;
}

/**
 * Form Errors
 *
 * This is forked from /scss/forms/_error.scss in Foundation for Sites.
 *
 * We have copied Foundation's mixins and prefixed them with `adk-` so we can control all the aspects of form input errors explicitly.
 *
 * The original Foundation _error.scss file includes default variable values.
 * We omitted the defaults in this file because they can still be overwritten in scss/_settings.scss if needed.
 */

/// Styles the background and border of an input field to have an error state.
///
/// @param {Color} $background [$alert-color] - Color to use for the background and border.
/// @param {Number} $background-lighten [10%] - Lightness level of the background color.
@mixin adk-form-input-error(
  $background: $input-background-invalid,
  $background-lighten: 10%
) {
  &:not(:focus) {
    border-color: get-color(alert);
    background-color: mix($background, $white, $background-lighten);
    color: get-color(alert); // Make the text match the border

    &::placeholder {
      color: get-color(alert);
    }
  }
}

@mixin adk-selectize-error(
  $background: $input-background-invalid,
  $background-lighten: 10%
) {
  &:not(.focus) {
    border-color: get-color(alert);
    background-color: mix($background, $white, $background-lighten);
    color: get-color(alert); // Make the text match the border

    input::placeholder {
      color: get-color(alert);
    }
  }
}

// Add form input error styles for Angular validator classes
input.ng-invalid,
select.ng-invalid,
input[type="checkbox"].ng-invalid + label,
textarea.ng-invalid {
  @include adk-form-input-error;
}

.selectize-input.ng-invalid {
  @include adk-selectize-error;
}


// Minimal Fields
// Written based on Material Design Lite
// https://getmdl.io/components/index.html#textfields-section

// Animations
@mixin minimal-animation-default($duration:0.2s) {
  transition-duration: $duration;
  transition-timing-function: $animation-curve-default;
}

$animation-curve-fast-out-slow-in: cubic-bezier(0.4, 0, 0.2, 1) !default;
$animation-curve-linear-out-slow-in: cubic-bezier(0, 0, 0.2, 1) !default;
$animation-curve-fast-out-linear-in: cubic-bezier(0.4, 0, 1, 1) !default;
$animation-curve-default: $animation-curve-fast-out-slow-in !default;

// Borders
$minimal-field-input-border: $input-border;
$minimal-field-input-border-focus: $thick-underline-hover;
$minimal-field-input-border-error: 2px solid $adk-red;

.minimal-field {
  position: relative;
  margin: $space 0;

  // Field
  input,
  select,
  textarea {
    @include minimal-animation-default();
    border: none;
    border-bottom: $minimal-field-input-border;
    border-radius: 0;
    background-color: transparent;
    box-shadow: none;
    margin: 0;
    padding-left: 0;

    &:focus {
      border: 0;
      border-bottom: $minimal-field-input-border-focus;
    }

    // Field errors
    &.ng-invalid {
      margin-bottom: 0;
      border-bottom: $minimal-field-input-border-error;

      // Red label
      & + label {
        color: $adk-red;
      }

      // Red error messages
      & ~ span[ng-messages] {
        color: $adk-red;
        font-size: $font-size-s;
      }
    }
  }

  // Label
  &.floating-label {
    label {
      @include minimal-animation-default();
      position: absolute;
      display: block;

      bottom: 0;
      top: $space-xxs;

      font-size: $input-font-size;
      font-weight: $global-weight-normal;

      pointer-events: none;
    }

    // Focused/filled fields
    input,
    select,
    textarea {

      // Position label above field
      &:focus,
      &:not(.ng-empty) {
        & + label {
          top: -$space;
          font-size: $font-size-s;
          font-weight: $global-weight-bold;
        }
      }

      // Blue label when valid
      &:focus:not(.ng-invalid) {
        & + label {
          color: $adk-blue;
        }
      }
    }
  }
}
