// Pills

$pill-padding: $space-xxs $space-s;

button.pill {
  color: $adk-blue;
  background-color: rgba($adk-blue, 0.3);
  padding: $pill-padding;
  margin: 0 $space-xs $space-xs 0;
}


.button {
  &.large {
    padding: $space $space-m;
  }
  &.small {
    padding: $space-s;
    font-size: $font-size-s;
  }
  &.tiny {
    padding: $space-xs;
    font-size: $font-size-s;
  }
  &.pill {
    padding: $space-xxs;
    font-size: $font-size-s;
  }
}

@mixin adk-button {
  .button {
    @include button;

    // Sizes
    // @each $size, $value in map-remove($button-sizes, default) {
    //   // &.#{$size} {
    //   //   padding: $value;
    //   // }
    // }

    &.expanded { @include button-expand; }

    // Colors
    @each $name, $color in $button-palette {
      @if $button-fill != hollow {
        &.#{$name} {
          @include button-style($color, auto, auto);
        }
      }
      @else {
        &.#{$name} {
          @include button-hollow-style($color);
        }

        &.#{$name}.dropdown::after {
          border-top-color: $color;
        }
      }
    }

    // Hollow style
    @if $button-fill != hollow {
      &.hollow {
        @include button-hollow;
        @include button-hollow-style;

        @each $name, $color in $button-palette {
          &.#{$name} {
            @include button-hollow-style($color);
          }
        }
      }
    }

    // Disabled style
    &.disabled,
    &[disabled] {
      @include button-disabled;

      @each $name, $color in $button-palette {
        &.#{$name} {
          @include button-disabled($color);
        }
      }
    }

    // Dropdown arrow
    &.dropdown {
      @include button-dropdown;

      @if $button-fill == hollow {
        &::after {
          border-top-color: $button-background;
        }
      }
    }

    // Button with dropdown arrow only
    &.arrow-only::after {
      top: -0.1em;
      float: none;
      margin-#{$global-left}: 0;
    }
  }
}
